<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Yahia/Python/src/Freelancer/vulnerability/data/vulnerability.sqlite" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2766"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainstats"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="assets" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="96"/><column index="2" value="300"/><column index="3" value="253"/><column index="4" value="216"/><column index="5" value="69"/><column index="6" value="183"/></column_widths><filter_values><column index="4" value="AIX"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="milestone" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="300"/><column index="2" value="70"/></column_widths><filter_values><column index="1" value="DR-Security-F5-Viprion-1"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="stats" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="70"/><column index="3" value="216"/><column index="4" value="300"/><column index="5" value="72"/><column index="6" value="42"/><column index="7" value="57"/><column index="8" value="40"/><column index="9" value="62"/><column index="10" value="61"/><column index="11" value="67"/><column index="12" value="61"/><column index="13" value="129"/><column index="14" value="118"/><column index="15" value="124"/><column index="16" value="118"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="progress by group">SELECT  a.&quot;Group&quot;, a.Location, b.numHosts, a.total &quot;Base # Vulner.&quot;,
          b.total &quot;Last Scan #Vulner.&quot;, (a.total - b.total) as &quot;# Fixed&quot;, 
          ROUND(((a.total - b.total) *1.0 /a.total)* 100, 1) as &quot;Fixed %&quot; 
          FROM stats a INNER join stats b on a.&quot;group&quot; = b.&quot;group&quot; 
          AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-11-24&quot; AND a.Location = b.Location) 
UNION
SELECT  &quot;Total Vul&quot;, &quot;&quot;, sum(b.numHosts), sum(a.total),
          sum(b.total),sum (a.total - b.total), 
          ROUND(((sum(a.total) - sum(b.total)) *1.0 /sum(a.total))* 100, 1) 
          FROM stats a INNER join stats b on a.&quot;group&quot; = b.&quot;group&quot; 
          AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-11-24&quot; AND a.Location = b.Location) 
  ORDER BY 1</sql><sql name="stats by group">select vlan_group, count(distinct vul.ipaddress) as &quot;# of hosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;Total&quot;
    FROM vulnerability vul LEFT JOIN assets on assets.ipaddress = vul.ipaddress
    GROUP by vlan_group
UNION
SELECT &quot;Total&quot;, count(distinct vul.ipaddress) as &quot;# of hosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;Total&quot;
    FROM vulnerability vul LEFT JOIN assets on assets.ipaddress = vul.ipaddress
</sql><sql name="stats by milestone">select  milestone, vlan_group,  count(distinct vul.ipaddress) as &quot;# of hosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;Total&quot;
    FROM vulnerability vul 
		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
		LEFT JOIN milestone ms on vul.name = ms.profile_name
    GROUP by vlan_group, ms.milestone
UNION
SELECT  &quot;ToTAL&quot;,&quot;&quot;, count(distinct vul.ipaddress) as &quot;# of hosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;Total&quot;
    FROM vulnerability vul 
		
	</sql><sql name="progress by milestone">SELECT  b.milestone, b.profile_group, a.numHosts &quot;Base mumHosts&quot;, b.numHosts &quot;last scan # hosts&quot;,
          a.total &quot;Base # Vulner.&quot;,
          b.total &quot;Last Scan #Vulner.&quot;, (a.total - b.total) as &quot;# Fixed&quot;,
          ROUND(((a.total - b.total) *1.0 /a.total)* 100, 1) as &quot;Fixed %&quot;
          FROM stats b INNER join stats a on a.profile_group = b.profile_group AND a.milestone = b.milestone
          AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-12-01&quot;)
UNION
SELECT  &quot;Total &quot;, &quot;&quot;, sum(a.numHosts), sum(b.numHosts), sum(a.total),
          sum(b.total),sum (a.total - b.total),
          ROUND(((sum(a.total) - sum(b.total)) *1.0 /sum(a.total))* 100, 1)
          FROM stats a INNER join stats b on a.profile_group = b.profile_group AND a.milestone = b.milestone
          AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-12-01&quot;)
  ORDER BY 1
  
</sql><sql name="Preogress by milestone - summary">SELECT milestone, &quot;&quot;,sum (BH) &quot;Base # Hosts&quot;, sum(LH) &quot;Last Scan # Hosts&quot;, sum (BT) &quot;Base # Vulner&quot;, sum(LT) &quot;Last Scan # Vulner&quot;, (sum (BT) - sum(LT)) as &quot;# Fixed&quot;, 
         ROUND((sum (BT) - sum(LT))*1.0 /sum(BT)* 100.0, 1) as &quot;Fixed %&quot;
FROM (
SELECT  b.milestone, a.numHosts BH, b.numHosts LH,
          a.total BT,
          b.total LT, (a.total - b.total) as F
          FROM stats b INNER join stats a on a.profile_group = b.profile_group AND a.milestone = b.milestone
          AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-12-01&quot;)
	 
)
GROUP BY milestone
UNION
SELECT &quot;Total&quot;, &quot;&quot;,sum (BH) &quot;Base # Hosts&quot;, sum(LH) &quot;Last Scan # Hosts&quot;, sum (BT) &quot;Base # Vulner&quot;, sum(LT) &quot;Last Scan # Vulner&quot;, (sum (BT) - sum(LT)) as &quot;# Fixed&quot;, 
         ROUND((sum (BT) - sum(LT))*1.0 /sum(BT)* 100.0, 1) as &quot;Fixed %&quot;
FROM (
SELECT  b.milestone, a.numHosts BH, b.numHosts LH,
          a.total BT,
          b.total LT, (a.total - b.total) as F
          FROM stats b INNER join stats a on a.profile_group = b.profile_group AND a.milestone = b.milestone
          AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-12-01&quot;)
  )
</sql><sql name="stats by milestone (1)">select  milestone, vlan_group,  ms.profile_name, count(distinct vul.ipaddress) as &quot;# of hosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;Total&quot;
    FROM vulnerability vul 
		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
		LEFT JOIN milestone ms on vul.name = ms.profile_name
-- 	WHERE ms.pofile_mame != &quot;&quot;
    GROUP by vlan_group, ms.milestone, ms.profile_name

-- UNION
-- SELECT  &quot;ToTAL&quot;,&quot;&quot;, &quot;&quot;, count(distinct vul.ipaddress) as &quot;# of hosts&quot;,
-- 	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
-- 	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
-- 	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
-- 	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
-- 	COUNT(risk) as &quot;Total&quot;
--     FROM vulnerability vul 
		
order by 2</sql><sql name="Progress by group">select a.&quot;Date&quot;, a.milestone, a.vlan_group, a.profile_name, numHosts,High,Medium, Low, Warning, Total, b.vt_total
FROM
(
SELECT 'scan_date' as &quot;Date&quot;, ms.milestone, vlan_group, ms.profile_name,
    COUNT(distinct assets.ipaddress) as &quot;numHosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;Total&quot;
    FROM vulnerability vul 
		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
		LEFT JOIN milestone ms on vul.name = ms.profile_name
    GROUP by vlan_group, ms.milestone, ms.profile_name
    ORDER BY 2
) a JOIN 
(SELECT 'scan_date' as &quot;Date&quot;, ms.milestone, vlan_group, ms.profile_name,
  COUNT(DISTINCT vulnerability) as &quot;VT_Total&quot;
    FROM vulnerability vul 
		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
		LEFT JOIN milestone ms on vul.name = ms.profile_name
	WHERE risk in (&quot;High&quot;, &quot;Medium&quot;)
   GROUP by vlan_group, ms.milestone, ms.profile_name
    ORDER BY 2
) b
USING (Date, milestone, vlan_group, profile_name)</sql><sql name="Validation">SELECT name, profile_name 
FROM vulnerability v LEFT JOIN assets a on name = a.profile_name
GROUP BY profile_name
HAVING profile_name is NULL

select v.ipaddress, name, profile_name  
FROM vulnerability v LEFT JOIN assets a using (ipaddress)
GROUP BY profile_name
HAVING profile_name is NULL

-- select a.milestone, a.profile_group, a.profile_name, b.profile_name  
--  FROM stats a left join stats b on a.profile_group = b.profile_group AND a.milestone = b.milestone
--           AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-12-04&quot;)
-- GROUP BY a.profile_name
-- HAVING b.profile_name is NULL

SELECT ipaddress, assets.profile_name, milestone 
FROM assets left join milestone using (profile_name)
GROUP BY profile_name 
HAVING milestone is NULL


	
</sql><sql name="SQL 10">SELECT ms.milestone, vul.name, assets.profile_group, stats.profile_name  
    FROM vulnerability vul 
            LEFT JOIN assets on assets.ipaddress = vul.ipaddress
            LEFT JOIN stats on vul.name = stats.profile_name
			LEFT JOIN milestone ms on name = ms.profile_name
    GROUP BY vul.name
    HAVING stats.profile_name is NULL</sql><sql name="list Vul for LINUX">select row_number() OVER() &quot;#&quot;, ipaddress, assetName, risk, cveid, vulnerability
from vulnerability
where risk in (&quot;High&quot;, &quot;Medium&quot;)
and name = &quot;HQ-BRANCHES-LEGACY-SERVERS-LINU&quot;

select count(DISTINCT vulnerability), count(vulnerability)
from vulnerability
where risk in (&quot;High&quot;, &quot;Medium&quot;)
and name = &quot;HQ-BRANCHES-LEGACY-SERVERS-LINU&quot;

select * from stats WHERE profile_name = &quot;HQ-BRANCHES-LEGACY-SERVERS-LINU&quot;
</sql><sql name="update_stats">UPDATE stats
	SET current_numHosts = crnt.numHosts,
	    current_total_all = crnt.total_all,
		current_total_HM = crnt.total_all
FROM
(
SELECT ms.milestone, assets.profile_group, ms.profile_name,
    COUNT(distinct assets.ipaddress) as numHosts,
	COUNT(risk) as total_all, 
    COUNT(CASE WHEN risk in ('High' ,'Medium') Then 1 END) as total_HM 
    FROM vulnerability vul 
		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
		LEFT JOIN milestone ms on vul.name = ms.profile_name
    GROUP by assets.profile_group, ms.milestone, ms.profile_name
) as crnt
WHERE stats.Date = '2020-09-22' AND stats.milestone = crnt.milestone 
AND stats.profile_group = crnt.profile_group AND stats.profile_name = crnt.profile_name

-- current_numHosts = crnt.numHosts
-- current_total_all = crnt.total_all,
-- 		current_total_HM = crnt.total_HM

-- a JOIN 
-- (SELECT Date, ms.milestone, vlan_group, ms.profile_name,
--   COUNT(DISTINCT vulnerability) as &quot;total_vt&quot;
--     FROM vulnerability vul 
-- 		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
-- 		LEFT JOIN milestone ms on vul.name = ms.profile_name
-- 	WHERE risk in ('High', 'Medium')
--    GROUP by vlan_group, ms.milestone, ms.profile_name
-- ) b
-- USING (Date, milestone, vlan_group, profile_name)
-- )
-- WHERE Date = '2020-09-22' AND stats.milestone = milestone AND stats.vlan_group = vlan_group AND stats.profile_name = profile_name
--select sqlite_version();</sql><sql name="SQL 13">SELECT profile_group, sum (numHosts) &quot;Base # Hosts&quot;, sum(current_numHosts) &quot;Last Scan # Hosts&quot;, 
        sum (total_HM) &quot;Base # Vulner&quot;, sum(current_total_HM) &quot;Last Scan # Vulner&quot;, (sum (total_HM) - sum(current_total_HM)) as &quot;# Fixed&quot;, 
        ROUND((sum (total_HM) - sum(current_total_HM))*1.0 /sum(total_HM)* 100.0, 1) as &quot;Fixed %&quot;
FROM stats
GROUP BY profile_group
UNION
SELECT &quot;Total&quot;, sum (numHosts) &quot;Base # Hosts&quot;, sum(current_numHosts) &quot;Last Scan # Hosts&quot;, 
        sum (total_HM) &quot;Base # Vulner&quot;, sum(current_total_HM) &quot;Last Scan # Vulner&quot;, (sum (total_HM) - sum(current_total_HM)) as &quot;# Fixed&quot;, 
        ROUND((sum (total_HM) - sum(current_total_HM))*1.0 /sum(total_HM)* 100.0, 1) as &quot;Fixed %&quot;
FROM stats

select name, profile_group, count(distinct v.ipaddress), count(distinct assets.ipaddress)
from vulnerability v left join assets using (ipaddress)
where profile_group = 'Network &amp; Security Devices'
group by profile_group


SELECT ms.milestone, profile_group, ms.profile_name,
    COUNT(distinct vul.ipaddress) as &quot;numHosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;total_all&quot;, 
    COUNT(CASE WHEN risk in ('High' ,'Medium') Then 1 END) as total_HM 
    FROM vulnerability vul 
		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
		LEFT JOIN milestone ms on vul.name = ms.profile_name
	where profile_group = 'Network &amp; Security Devices'
    GROUP by profile_group, ms.milestone, ms.profile_name</sql><current_tab id="11"/></tab_sql></sqlb_project>

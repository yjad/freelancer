<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Yahia/Python/src/Freelancer/vulnerability/data/vulnerability.sqlite" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2766"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,16:mainvul_fix_category"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="assets" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="63"/><column index="2" value="96"/><column index="3" value="300"/><column index="4" value="253"/><column index="5" value="216"/><column index="6" value="69"/><column index="7" value="183"/><column index="8" value="227"/><column index="9" value="57"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="vul_fix_category" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="207"/><column index="2" value="300"/><column index="3" value="306"/><column index="4" value="300"/><column index="5" value="210"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="vulnerability" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="230"/><column index="2" value="119"/><column index="3" value="87"/><column index="4" value="300"/><column index="5" value="62"/><column index="6" value="50"/><column index="7" value="48"/><column index="8" value="75"/><column index="9" value="300"/><column index="10" value="70"/><column index="11" value="98"/><column index="12" value="72"/><column index="13" value="300"/><column index="14" value="82"/><column index="15" value="81"/><column index="16" value="152"/><column index="17" value="40"/><column index="18" value="46"/><column index="19" value="95"/><column index="20" value="300"/><column index="21" value="92"/><column index="22" value="68"/><column index="23" value="88"/><column index="24" value="300"/><column index="25" value="89"/><column index="26" value="81"/><column index="27" value="44"/><column index="28" value="89"/></column_widths><filter_values><column index="24" value="Remote Procedure Call Service Present - statd.kstat.status"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Validation">SELECT name, profile_name 
FROM vulnerability v LEFT JOIN assets a on name = a.profile_name
GROUP BY profile_name
HAVING profile_name is NULL

select v.ipaddress, name, profile_name  
FROM vulnerability v LEFT JOIN assets a using (ipaddress)
GROUP BY profile_name
HAVING profile_name is NULL


SELECT ipaddress, assets.profile_name, milestone 
FROM assets left join milestone using (profile_name)
GROUP BY profile_name 
HAVING milestone is NULL


SELECT a.ipaddress, name, profile_name 
FROM assets a LEFT JOIN  vulnerability v  on name = a.profile_name
GROUP BY profile_name
HAVING name is NULL

SELECT name, profile_name 
FROM vulnerability v 
LEFT JOIN stats a on name = a.profile_name
GROUP BY profile_name
HAVING profile_name is NULL

	
</sql><sql name="fix_categ_stats.sql">SELECT a.followup_group, name as 'profile_name', a.vulnerability, a.cveid, vfc.fix_category
FROM(
	SELECT name, vulnerability, cveid, followup_group
        FROM vulnerability vul 
        LEFT JOIN assets ast using (ipaddress)
    WHERE risk in ('High', 'Medium') AND ifnull(ast.exclude,0) = 0
    GROUP by name,vulnerability
	--HAVING name = 'DR-VLAN-73-AIX-Servers-WAS'
	order by 1
)a 
LEFT JOIN vul_fix_category vfc on a.vulnerability = vfc.vulnerability AND a.followup_group = vfc.followup_group
--GROUP BY a.followup_group, vfc.fix_category
ORDER BY 1,2,3


-- SELECT  assets.followup_group, name 'profile_name', v.vulnerability ,vfc.fix_category, count(DISTINCT v.vulnerability) as 'CVEID Count'
-- FROM vulnerability v 
-- 	LEFT JOIN vul_fix_category vfc USING (vulnerability)
-- 	LEFT JOIN assets USING (ipaddress)
-- WHERE v.risk in ('High','Medium') AND ifnull(exclude,0) = 0
-- GROUP BY assets.followup_group, name
-- --HAVING vfc.followup_group is NULL


</sql><sql name="cveid count stats.sql">SELECT a.followup_group, vfc.fix_category, sum(total_vt)
FROM(
	SELECT name, vulnerability, COUNT(DISTINCT vul.vulnerability) as &quot;total_vt&quot;, followup_group
        FROM vulnerability vul 
        LEFT JOIN assets ast using (ipaddress)
    WHERE risk in ('High', 'Medium') AND ifnull(ast.exclude,0) = 0
    GROUP by name,vulnerability
	--HAVING name = 'DR-VLAN-73-AIX-Servers-WAS'
	order by 1
)a 
LEFT JOIN vul_fix_category vfc on a.vulnerability = vfc.vulnerability AND a.followup_group = vfc.followup_group
GROUP BY a.followup_group, vfc.fix_category
ORDER BY 1,2</sql><sql name="Inset Into vul_fix_categoy.sql">   --INSERT INTO vul_fix_category
   SELECT ast.followup_group,  vul.vulnerability, vul.cveid
   ,CASE WHEN length(vul.cveid) =0 THEN vul.vulnerability ELSE substr(vul.vulnerability, length(vul.cveid) + 8) END as v_text
   , vfc.fix_category
        FROM vulnerability vul 
        LEFT JOIN assets ast using (ipaddress)
		LEFT JOIN vul_fix_category vfc USING (vulnerability, followup_group)
    WHERE risk in ('High', 'Medium') AND ifnull(ast.exclude,0) = 0
    GROUP by  vfc.vulnerability,vfc.followup_group 
	HAVING vfc.followup_group is NULL
	order by 1
	

	</sql><sql name="SQL 6">select DISTINCT fix_category from vul_fix_category</sql><current_tab id="4"/></tab_sql></sqlb_project>

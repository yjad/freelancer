<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Yahia/Python/src/Freelancer/vulnerability/data/vulnerability.sqlite" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2766"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainstats"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="assets" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="63"/><column index="2" value="96"/><column index="3" value="300"/><column index="4" value="253"/><column index="5" value="216"/><column index="6" value="69"/><column index="7" value="183"/><column index="8" value="227"/><column index="9" value="57"/></column_widths><filter_values><column index="2" value="172.17."/><column index="8" value="02"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="base_vul" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="230"/><column index="2" value="119"/><column index="3" value="87"/><column index="4" value="300"/><column index="5" value="62"/><column index="6" value="50"/><column index="7" value="48"/><column index="8" value="75"/><column index="9" value="300"/><column index="10" value="70"/><column index="11" value="98"/><column index="12" value="72"/><column index="13" value="300"/><column index="14" value="82"/><column index="15" value="81"/><column index="16" value="152"/><column index="17" value="40"/><column index="18" value="46"/><column index="19" value="95"/><column index="20" value="300"/><column index="21" value="92"/><column index="22" value="68"/><column index="23" value="88"/><column index="24" value="300"/><column index="25" value="89"/><column index="26" value="81"/><column index="27" value="44"/><column index="28" value="89"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="milestone" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="300"/><column index="2" value="70"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="stats" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="70"/><column index="2" value="95"/><column index="3" value="299"/><column index="4" value="108"/><column index="5" value="72"/><column index="6" value="40"/><column index="7" value="57"/><column index="8" value="40"/><column index="9" value="62"/><column index="10" value="61"/><column index="11" value="67"/><column index="12" value="129"/><column index="13" value="61"/><column index="14" value="118"/><column index="15" value="124"/><column index="16" value="118"/><column index="17" value="54"/><column index="18" value="44"/><column index="19" value="101"/></column_widths><filter_values><column index="3" value="f5"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="vulnerability" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="230"/><column index="2" value="119"/><column index="3" value="87"/><column index="4" value="300"/><column index="5" value="62"/><column index="6" value="50"/><column index="7" value="48"/><column index="8" value="75"/><column index="9" value="300"/><column index="10" value="70"/><column index="11" value="98"/><column index="12" value="72"/><column index="13" value="300"/><column index="14" value="120"/><column index="15" value="81"/><column index="16" value="152"/><column index="17" value="40"/><column index="18" value="46"/><column index="19" value="95"/><column index="20" value="300"/><column index="21" value="92"/><column index="22" value="68"/><column index="23" value="88"/><column index="24" value="300"/><column index="25" value="89"/><column index="26" value="81"/><column index="27" value="44"/><column index="28" value="89"/></column_widths><filter_values><column index="1" value="was"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="progress by group">SELECT  a.&quot;Group&quot;, a.Location, b.numHosts, a.total &quot;Base # Vulner.&quot;,
          b.total &quot;Last Scan #Vulner.&quot;, (a.total - b.total) as &quot;# Fixed&quot;, 
          ROUND(((a.total - b.total) *1.0 /a.total)* 100, 1) as &quot;Fixed %&quot; 
          FROM stats a INNER join stats b on a.&quot;group&quot; = b.&quot;group&quot; 
          AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-11-24&quot; AND a.Location = b.Location) 
UNION
SELECT  &quot;Total Vul&quot;, &quot;&quot;, sum(b.numHosts), sum(a.total),
          sum(b.total),sum (a.total - b.total), 
          ROUND(((sum(a.total) - sum(b.total)) *1.0 /sum(a.total))* 100, 1) 
          FROM stats a INNER join stats b on a.&quot;group&quot; = b.&quot;group&quot; 
          AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-11-24&quot; AND a.Location = b.Location) 
  ORDER BY 1</sql><sql name="stats by group">select vlan_group, count(distinct vul.ipaddress) as &quot;# of hosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;Total&quot;
    FROM vulnerability vul LEFT JOIN assets on assets.ipaddress = vul.ipaddress
    GROUP by vlan_group
UNION
SELECT &quot;Total&quot;, count(distinct vul.ipaddress) as &quot;# of hosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;Total&quot;
    FROM vulnerability vul LEFT JOIN assets on assets.ipaddress = vul.ipaddress
</sql><sql name="stats by milestone">select  milestone, vlan_group,  count(distinct vul.ipaddress) as &quot;# of hosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;Total&quot;
    FROM vulnerability vul 
		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
		LEFT JOIN milestone ms on vul.name = ms.profile_name
    GROUP by vlan_group, ms.milestone
UNION
SELECT  &quot;ToTAL&quot;,&quot;&quot;, count(distinct vul.ipaddress) as &quot;# of hosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;Total&quot;
    FROM vulnerability vul 
		
	</sql><sql name="progress by milestone">SELECT  b.milestone, b.profile_group, a.numHosts &quot;Base mumHosts&quot;, b.numHosts &quot;last scan # hosts&quot;,
          a.total &quot;Base # Vulner.&quot;,
          b.total &quot;Last Scan #Vulner.&quot;, (a.total - b.total) as &quot;# Fixed&quot;,
          ROUND(((a.total - b.total) *1.0 /a.total)* 100, 1) as &quot;Fixed %&quot;
          FROM stats b INNER join stats a on a.profile_group = b.profile_group AND a.milestone = b.milestone
          AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-12-01&quot;)
UNION
SELECT  &quot;Total &quot;, &quot;&quot;, sum(a.numHosts), sum(b.numHosts), sum(a.total),
          sum(b.total),sum (a.total - b.total),
          ROUND(((sum(a.total) - sum(b.total)) *1.0 /sum(a.total))* 100, 1)
          FROM stats a INNER join stats b on a.profile_group = b.profile_group AND a.milestone = b.milestone
          AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-12-01&quot;)
  ORDER BY 1
  
</sql><sql name="Preogress by milestone - summary">SELECT milestone, &quot;&quot;,sum (BH) &quot;Base # Hosts&quot;, sum(LH) &quot;Last Scan # Hosts&quot;, sum (BT) &quot;Base # Vulner&quot;, sum(LT) &quot;Last Scan # Vulner&quot;, (sum (BT) - sum(LT)) as &quot;# Fixed&quot;, 
         ROUND((sum (BT) - sum(LT))*1.0 /sum(BT)* 100.0, 1) as &quot;Fixed %&quot;
FROM (
SELECT  b.milestone, a.numHosts BH, b.numHosts LH,
          a.total BT,
          b.total LT, (a.total - b.total) as F
          FROM stats b INNER join stats a on a.profile_group = b.profile_group AND a.milestone = b.milestone
          AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-12-01&quot;)
	 
)
GROUP BY milestone
UNION
SELECT &quot;Total&quot;, &quot;&quot;,sum (BH) &quot;Base # Hosts&quot;, sum(LH) &quot;Last Scan # Hosts&quot;, sum (BT) &quot;Base # Vulner&quot;, sum(LT) &quot;Last Scan # Vulner&quot;, (sum (BT) - sum(LT)) as &quot;# Fixed&quot;, 
         ROUND((sum (BT) - sum(LT))*1.0 /sum(BT)* 100.0, 1) as &quot;Fixed %&quot;
FROM (
SELECT  b.milestone, a.numHosts BH, b.numHosts LH,
          a.total BT,
          b.total LT, (a.total - b.total) as F
          FROM stats b INNER join stats a on a.profile_group = b.profile_group AND a.milestone = b.milestone
          AND (a.date = &quot;2020-09-22&quot; AND b.date = &quot;2020-12-01&quot;)
  )
</sql><sql name="stats by milestone (1)">select  milestone, vlan_group,  ms.profile_name, count(distinct vul.ipaddress) as &quot;# of hosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;Total&quot;
    FROM vulnerability vul 
		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
		LEFT JOIN milestone ms on vul.name = ms.profile_name
-- 	WHERE ms.pofile_mame != &quot;&quot;
    GROUP by vlan_group, ms.milestone, ms.profile_name

-- UNION
-- SELECT  &quot;ToTAL&quot;,&quot;&quot;, &quot;&quot;, count(distinct vul.ipaddress) as &quot;# of hosts&quot;,
-- 	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
-- 	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
-- 	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
-- 	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
-- 	COUNT(risk) as &quot;Total&quot;
--     FROM vulnerability vul 
		
order by 2</sql><sql name="Progress by group">select a.&quot;Date&quot;, a.milestone, a.vlan_group, a.profile_name, numHosts,High,Medium, Low, Warning, Total, b.vt_total
FROM
(
SELECT 'scan_date' as &quot;Date&quot;, ms.milestone, vlan_group, ms.profile_name,
    COUNT(distinct assets.ipaddress) as &quot;numHosts&quot;,
	COUNT(CASE WHEN risk = 'High' Then 1 END) as 'High', 
	COUNT(CASE WHEN risk = 'Medium' Then 1 END) as 'Medium',
	COUNT(CASE WHEN risk = 'Low' Then 1 END) as 'Low',
	COUNT(CASE WHEN risk = 'Warning' Then 1 END) as 'Warning',
	COUNT(risk) as &quot;Total&quot;
    FROM vulnerability vul 
		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
		LEFT JOIN milestone ms on vul.name = ms.profile_name
    GROUP by vlan_group, ms.milestone, ms.profile_name
    ORDER BY 2
) a JOIN 
(SELECT 'scan_date' as &quot;Date&quot;, ms.milestone, vlan_group, ms.profile_name,
  COUNT(DISTINCT vulnerability) as &quot;VT_Total&quot;
    FROM vulnerability vul 
		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
		LEFT JOIN milestone ms on vul.name = ms.profile_name
	WHERE risk in (&quot;High&quot;, &quot;Medium&quot;)
   GROUP by vlan_group, ms.milestone, ms.profile_name
    ORDER BY 2
) b
USING (Date, milestone, vlan_group, profile_name)</sql><sql name="Validation">SELECT name, profile_name 
FROM vulnerability v LEFT JOIN assets a on name = a.profile_name
GROUP BY profile_name
HAVING profile_name is NULL

select v.ipaddress, name, profile_name  
FROM vulnerability v LEFT JOIN assets a using (ipaddress)
GROUP BY profile_name
HAVING profile_name is NULL


SELECT ipaddress, assets.profile_name, milestone 
FROM assets left join milestone using (profile_name)
GROUP BY profile_name 
HAVING milestone is NULL


SELECT a.ipaddress, name, profile_name 
FROM assets a LEFT JOIN  vulnerability v  on name = a.profile_name
GROUP BY profile_name
HAVING name is NULL

SELECT name, profile_name 
FROM vulnerability v 
LEFT JOIN stats a on name = a.profile_name
GROUP BY profile_name
HAVING profile_name is NULL

	
</sql><sql name="SQL 10">SELECT ms.milestone, assets.profile_group, name,followup_group, 
            COUNT(CASE WHEN risk in ('High' ,'Medium') THEN 1 END ) as followup_total
        FROM vulnerability vul 
            LEFT JOIN assets on assets.ipaddress = vul.ipaddress
            LEFT JOIN milestone ms on vul.name = ms.profile_name
        WHERE vul.ipaddress in (SELECT distinct ipaddress FROM base_vul)
        GROUP by assets.profile_group, ms.milestone, name, followup_group</sql><sql name="list Vul for LINUX">select row_number() OVER() &quot;#&quot;, ipaddress, assetName, criticalDetails, risk, cveid, vulnerability
from vulnerability
where risk in ('High', 'Medium')
and name like &quot;%LINU%&quot;

select row_number() OVER() &quot;#&quot;, ipaddress, v.assetName, risk, cveid, vulnerability
from vulnerability v LEFT JOIN assets a USING (ipaddress)
where risk in (&quot;High&quot;, &quot;Medium&quot;)
and followup_group like '03-%' AND exclude is NULL



select row_number() OVER() &quot;#&quot;, v.*
from vulnerability v 
where risk in (&quot;High&quot;, &quot;Medium&quot;) and name = 'HQ-VLAN-77-Windows-Mutual-Fund-Servers-FULL'
and ipaddress in ('172.17.77.32', '172.17.77.34', '172.17.77.134')

</sql><sql name="update_stats">UPDATE stats
	SET current_numHosts = crnt.numHosts,
	    current_total_all = crnt.total_all,
		current_total_HM = crnt.total_all
FROM
(
SELECT ms.milestone, assets.profile_group, ms.profile_name,
    COUNT(distinct assets.ipaddress) as numHosts,
	COUNT(risk) as total_all, 
    COUNT(CASE WHEN risk in ('High' ,'Medium') Then 1 END) as total_HM 
    FROM vulnerability vul 
		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
		LEFT JOIN milestone ms on vul.name = ms.profile_name
    GROUP by assets.profile_group, ms.milestone, ms.profile_name
) as crnt
WHERE stats.Date = '2020-09-22' AND stats.milestone = crnt.milestone 
AND stats.profile_group = crnt.profile_group AND stats.profile_name = crnt.profile_name

-- current_numHosts = crnt.numHosts
-- current_total_all = crnt.total_all,
-- 		current_total_HM = crnt.total_HM

-- a JOIN 
-- (SELECT Date, ms.milestone, vlan_group, ms.profile_name,
--   COUNT(DISTINCT vulnerability) as &quot;total_vt&quot;
--     FROM vulnerability vul 
-- 		LEFT JOIN assets on assets.ipaddress = vul.ipaddress
-- 		LEFT JOIN milestone ms on vul.name = ms.profile_name
-- 	WHERE risk in ('High', 'Medium')
--    GROUP by vlan_group, ms.milestone, ms.profile_name
-- ) b
-- USING (Date, milestone, vlan_group, profile_name)
-- )
-- WHERE Date = '2020-09-22' AND stats.milestone = milestone AND stats.vlan_group = vlan_group AND stats.profile_name = profile_name
--select sqlite_version();</sql><sql name="SQL 13">DELETE FROM stats WHERE
        ipaddres IN 
        (SELECT ipaddress FROM assets WHERE exclude is not NULL)
		
		
DELETE from base_vul WHERE ipaddress = '172.17.90.200' AND name = 'HQ-VLAN-90-Windows-Server-FULL'</sql><sql name="SQL 14">delete from vulnerability
where ipaddress = '172.17.90.200'
and name = 'HQ-VLAN-90-Windows-Server-FULL'</sql><current_tab id="11"/></tab_sql></sqlb_project>

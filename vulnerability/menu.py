# from tkinter import Tk, Label, Button, Entry, IntVar, END, W, E, NE, StringVar, DoubleVar, WORD, Menu
# from tkinter import filedialog
from tkinter.scrolledtext import ScrolledText
from tkinter import *
from tkinter.ttk import *
from reports import stats_by_ip, vulners_list_all, stats_by_group
from load_db import load_db

DATA_FOLDER=r"C:\Users\yahia\Documents\Vulner project\Qradar\09-2020 - Copy"

def get_file_path(initialDir=".", DialogTitle="select File", fileTypeText="all Files", fileType="*.*"):
    #root = Tk()
    #root.withdraw()
    file_path: str

    file_path = filedialog.askopenfilename(initialdir=initialDir, title=DialogTitle,
                                           filetypes=((fileTypeText, fileType), ("all files", "*.*")))

    return file_path
    

class MainMenu():

    def __init__(self, master):
        self.master = master
        self.output_file_name = StringVar()

        self.menu_bar = Menu(master)
        
        master.title ('Vulnerability - Qradar scan files')


        self.output = ScrolledText(master, width=120, height = 40, wrap = WORD, background = 'white')
        self.output.grid(row=1, column = 0, columnspan = 2, sticky = 'W')

        file_menu = Menu(self.menu_bar, tearoff=0)
        file_menu.add_command(label="Load Qradar files", command=self.display_table)
        file_menu.add_separator()
        file_menu.add_command(label="Exit", command=master.quit)
        self.menu_bar.add_cascade(label="Load", menu=file_menu)
        
        report_menu = Menu(self.menu_bar, tearoff = 0)
        report_menu.add_command(label="stats by ip", command=self.display_table)
        self.menu_bar.add_cascade(label="Reports", menu=report_menu)
        master.config(menu=self.menu_bar)    
       

    def stats_by_ip(self):
        self.output.delete(0.0, END)        # clear window
        file_path = self.select_file_path()
        self.output_file_name.set('Results of file name: '+ file_path)
        stats_by_ip(r"abc.xlsx")
        
        
    def display_table(self, header, rows):
        x = self.output
        x.insert(END, header +'\n')
        for row in rows:
            x.insert(END, row +'\n')
            
    def select_file_path(self):
        try:
            file_path = get_file_path(initialDir=".", DialogTitle="select excel/csv sheet", fileTypeText="excel, csv",
                                           fileType="*.xlsx;*.csv")
        except:
            print('No file selected ...')
            return ''
        else:
            return file_path


def run_menu():
    root = Tk()
    #root.attributes('-fullscreen', True)
    root.state('zoomed')
    
    output = ScrolledText(root, width=120, height = 40, wrap = WORD, background = 'white')
    output.grid(row=1, column = 0, columnspan = 2, sticky = 'W')

    menu_bar = Menu(root)
    file_menu = Menu(menu_bar, tearoff=0)
    file_menu.add_command(label="Load Qradar files", command=lambda: load_db(DATA_FOLDER, output))
    file_menu.add_separator()
    file_menu.add_command(label="Exit", command=root.quit)
    menu_bar.add_cascade(label="Load", menu=file_menu)
    
    report_menu = Menu(menu_bar, tearoff = 0)
    # report_menu.add_command(label="stats by ip", command= lambda: tk_stats_by_ip(output))
    report_menu.add_command(label="Stats by ip", command= lambda: stats_by_ip(output))
    report_menu.add_command(label="Vulnerability All", command= lambda: vulners_list_all(output))
    report_menu.add_command(label="Stats by VLAN Group", command= lambda: stats_by_group(output))
    report_menu.add_command(label="Test Table", command= lambda: test_table_entry (root))
    menu_bar.add_cascade(label="Reports", menu=report_menu)
    root.config(menu=menu_bar)    
    
#MainMenu(root)
    root.mainloop()

def display_table(output, header, rows):   
    s = ""
    for cell in header:
        s = s + "\t" + str(cell)
    output.insert(END, s +'\n')
    for row in rows:
        s = ""
        for cell in row:
            s = s + '\t' + str(cell)
        output.insert(END, s +'\n')


def tk_stats_by_ip(output):
    header, rows = stats_by_ip(None)
    display_table(output, header, rows)


try:
  from tkinter import *
  from tkinter.ttk import *
except ImportError :  
  print("exception in importing module")


def tble_stats_by_ip(root):
    tree=Treeview(root)
    tree["columns"]=("one","two","three")
    tree.column("#0", width=270, minwidth=270, stretch=NO)
    tree.column("one", width=150, minwidth=150, stretch=NO)
    tree.column("two", width=400, minwidth=200)
    tree.column("three", width=80, minwidth=50, stretch=NO)
    
    tree.heading("#0",text="Name",anchor=W)
    tree.heading("one", text="Date modified",anchor=W)
    tree.heading("two", text="Type",anchor=W)
    tree.heading("three", text="Size",anchor=W)
    
    tree.insert("", 3, "", text="XXXXXXX", values=("23-Jun-17 11:05","File folder",""))
    #tree.insert("", 4, "", text="text_file.txt", values=("23-Jun-17 11:25","TXT file","1 KB"))
    
    
def test_table_entry(root):
    
    entryText = StringVar()
    entry = Entry(root, textvariable=entryText )
    text_0 =  "Hello World"
    entryText.set( text_0 )
    # entry.grid(row=1, column=1)
    return
    
    height = 5
    width = 5
    cells = {}
    for i in range(height): #Rows
        for j in range(width): #Columns
            text = StringVar()
            
            # b = Entry(root, text="")
            b = Entry(root, textvariable=text)
            text.set ("Yahia Jad")
            # b.config(state=DISABLED)
            b.grid(row=i, column=j)
            # cells[(i,j)] = b
